<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(SolutionDir)\SharpMock.Utils\bin\$(ConfigurationName)\$(TargetFramework)\SharpMock.Utils.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="SharpMock.Utils" #>
<#@ output extension=".cs" #>

namespace SharpMock.Library
{
<#

PushIndent("".PadLeft(4));
for (int i = 0; i <= Generators.ArgCount; ++i)
{
	GenerateInterface(i);
}
PopIndent();

#>
}
<#+

private void GenerateInterface(int count)
{
	var typeList = (count == 0) ? "" : "<" + GenerateNumberedList("T{0}", count) + ">";
	var typeArgs = GenerateNumberedList("T{0} arg{0}", count);

#>
public interface IActionEngine<#= typeList #> : IEngine
{
	void Execute(<#= typeArgs #>);
	IActionSetup<#= typeList #> Setup();
}

<#+
}

public static string GenerateNumberedList(string format, int count)
{
	return string.Join(", ", Enumerable.Range(1, count).Select(i => string.Format(format, i)));
}

#>
