<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(SolutionDir)\SharpMock.Utils\bin\$(ConfigurationName)\$(TargetFramework)\SharpMock.Utils.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="SharpMock.Utils" #>
<#@ output extension=".cs" #>
using System;

namespace SharpMock.Library.Action
{
<#

PushIndent("".PadLeft(4));
for (int i = 0; i <= Generators.ArgCount; ++i)
{
    GenerateAction(i);
}
PopIndent();

#>
}
<#+

private void GenerateAction(int i)
{
    var types = GenerateNumberedList("T{0}", i);
    var typeList = (types == "") ? "" : $"<{types}>";
    var typeArgs = GenerateNumberedList("T{0} arg{0}", i);
    var args = GenerateNumberedList("arg{0}", i);

#>
public class MultiArgAction<#=typeList #> : IAction
{
    private readonly System.Action<#= typeList #> _action;

    public MultiArgAction(System.Action<#= typeList #> action)
    {
        _action = action;
    }

    public void Execute(<#= typeArgs #>)
    {
        _action(<#= args #>);
    }
}

<#+
}

public static string GenerateNumberedList(string format, int count)
{
	return string.Join(", ", Enumerable.Range(1, count).Select(i => string.Format(format, i)));
}

#>